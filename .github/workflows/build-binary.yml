name: Build Artifact

# on: 
#   release:
#     types: [created]
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Build
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o http-loadtester
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: http-loadtester
    #     path: ./http-loadtester
    - name: zip # This would actually build your project, using zip for an example artifact
      run: |
        zip --junk-paths http-loadtester http-loadtester
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${GITHUB_REF#refs/*/}
        release_name: Release${GITHUB_REF#refs/*/}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./http-loadtester.zip
        asset_name: http-loadtester.zip
        asset_content_type: application/zip